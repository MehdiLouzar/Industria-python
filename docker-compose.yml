version: "3.9"

services:
# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 1. Postgres ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  db:
    image: postgis/postgis:14-3.3
    container_name: industria-database
    build:
      context: .
      dockerfile: Dockerfile-db          # garde ta personnalisation √©ventuelle
    restart: unless-stopped
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: industria
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data  # ‚ö†Ô∏è on NE monte plus initDB.sql ici
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d industria"]
      interval: 5s
      timeout: 3s
      retries: 30

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 2. Flask App ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  flask_app:
    build: .
    # client Postgres (pg_isready + psql) doit √™tre pr√©sent dans l‚Äôimage :
    #   RUN apt-get update && apt-get install -y --no-install-recommends postgresql-client
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/industria
      KEYCLOAK_ISSUER: http://keycloak:8080/realms/master
      KEYCLOAK_AUDIENCE: industria
      KEYCLOAK_CLIENT_ID: industria
      KEYCLOAK_CLIENT_SECRET: aIq8Fhb6mvS8FCVYEzEzA1wuDmoK0MRD
      MAPBOX_TOKEN: my token
      DOCKER_ENV: "true"
    command: >
      sh -c "
        # ‚è≥ attente explicite de Postgres
        until pg_isready -h db -p 5432 -U postgres; do sleep 1; done;
        exec python run.py
      "
    healthcheck:
      # healthy d√®s qu'une table cr√©√©e par le mod√®le (ici 'countries') existe
      test: >
        CMD-SHELL psql "$$DATABASE_URL" -tAc
        "SELECT 1 FROM pg_tables
         WHERE schemaname='public' AND tablename='countries';" | grep -q 1
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 10s

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 3. Population SQL ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  init_db:
    image: postgis/postgis:14-3.3        # contient d√©j√† psql
    container_name: industria-init
    restart: "no"
    depends_on:
      flask_app:
        condition: service_healthy       # tables d√©j√† cr√©√©es
    environment:
      PGPASSWORD: postgres
    volumes:
      - ./db/init/initDB.sql:/init.sql:ro
    command: >
      sh -c "
        echo 'üöÄ Populating database‚Ä¶';
        psql -h db -U postgres -d industria -v ON_ERROR_STOP=1 -f /init.sql;
        echo '‚úÖ Data populated';
      "

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 4. Keycloak ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  keycloak:
    image: quay.io/keycloak/keycloak:24.0.1
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: start-dev
    ports:
      - "8080:8080"
    depends_on:
      db:
        condition: service_healthy

# ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ 5. Bootstrap Keycloak (inchang√©) ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ
  keycloak_bootstrap:
    build:
      context: .
      dockerfile: Dockerfile.bootstrap
    depends_on:
      keycloak:
        condition: service_healthy
    environment:
      DATABASE_URL: postgresql://postgres:postgres@db:5432/industria
      KEYCLOAK_SERVER_URL: http://keycloak:8080
      KEYCLOAK_REALM: master
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    command: >
      sh -c "
        until pg_isready -h db -p 5432; do
          echo '‚è≥ Waiting for PostgreSQL...'; sleep 3;
        done &&
        until curl -fs http://keycloak:8080/realms/master; do
          echo '‚è≥ Waiting for Keycloak...'; sleep 5;
        done &&
        python scripts/bootstrap_keycloak.py
      "

volumes:
  pgdata:
